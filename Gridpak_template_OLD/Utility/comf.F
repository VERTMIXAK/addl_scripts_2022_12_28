!
!     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
!     *                                                               *
!     *                        f i s h p a k                          *
!     *                                                               *
!     *                                                               *
!     *     a package of fortran subprograms for the solution of      *
!     *                                                               *
!     *      separable elliptic partial differential equations        *
!     *                                                               *
!     *                  (version 3.2 , november 1988)                *
!     *                                                               *
!     *                             by                                *
!     *                                                               *
!     *        john adams, paul swarztrauber and roland sweet         *
!     *                                                               *
!     *                             of                                *
!     *                                                               *
!     *         the national center for atmospheric research          *
!     *                                                               *
!     *                boulder, colorado  (80307)  u.s.a.             *
!     *                                                               *
!     *                   which is sponsored by                       *
!     *                                                               *
!     *              the national science foundation                  *
!     *                                                               *
!     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
!
!
! package comf           the entries in this package are lowlevel
!                        entries, supporting fishpak entries blktri
!                        and cblktri. that is, these routines are
!                        not called directly by users, but rather
!                        by entries within blktri and cblktri.
!                        description of entries epmach and pimach
!                        follow below.
!
! latest revision        november 1988
!
! special conditions     none
!
! i/o                    none
!
! precision              single
!
! required library       none
! files
!
! language               fortran
! ********************************************************************
!
! function epmach (dum)
!
! purpose                to compute an approximate machine accuracy
!                        epsilon according to the following definition:
!                        epsilon is the smallest number such that
!                        (1.+epsilon).gt.1.)
!
! usage                  eps = epmach (dum)
!
! arguments
! on input               dum
!                          dummy value
!
! arguments
! on output              none
!
! history                the original version, written when the
!                        blktri package was converted from the
!                        cdc 7600 to run on the cray-1, calculated
!                        machine accuracy by successive divisions
!                        by 10.  use of this constant caused blktri
!                        to compute solutions on the cray-1 with four
!                        fewer places of accuracy than the version
!                        on the 7600.  it was found that computing
!                        machine accuracy by successive divisions
!                        of 2 produced a machine accuracy 29% less
!                        than the value generated by successive
!                        divisions by 10, and that use of this
!                        machine constant in the blktri package
!                        recovered the accuracy that appeared to
!                        be lost on conversion.
!
! algorithm              computes machine accuracy by successive
!                        divisions of two.
!
! portability            this code will execute on machines other
!                        than the cray1, but the returned value may
!                        be unsatisfactory.  see history above.
! ********************************************************************
!
! function pimach (dum)
!
! purpose                to supply the value of the constant pi
!                        correct to machine precision where
!                        pi=3.141592653589793238462643383279502884197
!                             1693993751058209749446
!
! usage                  pi = pimach (dum)
!
! arguments
! on input               dum
!                          dummy value
!
! arguments
! on output              none
!
! algorithm              the value of pi is set to 4.*atan(1.0)
!
! portability            this entry is portable, but users should
!                        check to see whether greater accuracy is
!                        required.
!
!***********************************************************************
#include "griddefs.h"

      BIGREAL function epmach (dum)
      BIGREAL dum

      BIGREAL v
      common /value/  v
      BIGREAL eps
      eps = 1.
  101 eps = eps/2.
      call strwrd (eps+1.)
      if (v-1.) 102,102,101
  102 epmach = 100.*eps
      return
      end

      subroutine strwrd (x)
      BIGREAL    x
      BIGREAL    v
      common /value/  v
      v = x
      return
      end

      BIGREAL function pimach (dum)
      BIGREAL dum
!     pi=3.1415926535897932384626433832795028841971693993751058209749446
!
#if DBLEPREC
      pimach = 4.d0*datan(1.0d0)
#else
      pimach = 4.*atan(1.0)
#endif  /* dbleprec */
      return
      end

      BIGREAL function ppsgf (x,iz,c,a,bh)
      integer    iz
      BIGREAL    x,    a(*)       ,c(*)       ,bh(*)
      BIGREAL    sum
      integer    j
      sum = 0.
      do 101 j=1,iz
         sum = sum-1./(x-bh(j))**2
  101 continue
      ppsgf = sum
      return
      end

      BIGREAL function ppspf (x,iz,c,a,bh)
      integer     iz
      BIGREAL     x,       a(*)       ,c(*)       ,bh(*)
      BIGREAL     sum
      integer     j
      sum = 0.
      do 101 j=1,iz
         sum = sum+1./(x-bh(j))
  101 continue
      ppspf = sum
      return
      end

      BIGREAL function psgf (x,iz,c,a,bh)
      integer      iz
      BIGREAL      x,      a(*)       ,c(*)       ,bh(*)
      BIGREAL      fsg, hsg, dd
      integer      j
      fsg = 1.
      hsg = 1.
      do 101 j=1,iz
         dd = 1./(x-bh(j))
         fsg = fsg*a(j)*dd
         hsg = hsg*c(j)*dd
  101 continue
      if (mod(iz,2)) 103,102,103
  102 psgf = 1.-fsg-hsg
      return
  103 psgf = 1.+fsg+hsg
      return
!
! revision history---
!
! september 1973    version 1
! april     1976    version 2
! january   1978    version 3
! december  1979    version 3.1
! february  1985    documentation upgrade
! november  1988    version 3.2, fortran 77 changes
! june      1993    BIGREAL stuff added
!-----------------------------------------------------------------------
      end

